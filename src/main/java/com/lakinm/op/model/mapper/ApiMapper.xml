<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lakinm.op.model.mapper.ApiMapper" >
    <select id="selectApiByName" parameterType="java.lang.String" resultType="com.lakinm.op.model.entity.Api">
        select * from `api` where name = #{name} and project_id = #{projectId}
    </select>

    <insert id="insertApi" parameterType="com.lakinm.op.model.entity.Api">
        INSERT INTO `api`(`id`, `num`, `name`, `level`, `module_id`, `project_id`, `method`, `path`, `protocol`,
        `domain_sign`, `description`, `header`, `body`, `query`, `rest`, `update_user`, `create_user`, `create_time`,
        `update_time`, `status`)
        VALUES
        (#{id}, #{num}, #{name}, #{level}, #{moduleId}, #{projectId}, #{method}, #{path}, #{protocol}, #{domainSign}, #{description},
        #{header}, #{body}, #{query}, #{rest}, #{updateUser}, #{createUser}, #{createTime}, #{updateTime}, #{status})
    </insert>

    <update id="updateApi" parameterType="com.lakinm.op.model.entity.Api">
        UPDATE `api` SET `num` = #{num}, `name` = #{name}, `level` = #{level}, `module_id` = #{moduleId}, `project_id` = #{projectId},
        `method` = #{method}, `path` = #{path}, `protocol` = #{protocol}, `domain_sign` = #{domainSign}, `description` = #{description},
        `header` = #{header}, `body` = #{body}, `query` = #{query}, `rest` = #{rest}, `update_user` = #{updateUser},
        `update_time` = #{updateTime} WHERE `id` = #{id}
    </update>

    <delete id="deleteApiById" parameterType="java.lang.String">
        delete from `api` where id = #{id}
    </delete>

    <update id="updateApiToDelStatus" parameterType="java.lang.String">
        UPDATE `api` SET `status` = "del" where `id` = #{id}
    </update>

    <select id="selectApiById" parameterType="java.lang.String" resultType="com.lakinm.op.model.dto.ApiDTO">
        SELECT a.id, a.num, a.`name`, a.`level`, a.module_id, b.`name` as moduleName, a.project_id, a.method,
        a.path, a.protocol, a.domain_sign, a.description, a.header, a.body, a.`query`, a.rest, a.`status`, a.create_time,
        a.create_user, a.update_time, a.update_user
        FROM `api` a LEFT JOIN `api_module` b on a.module_id = b.id
        where a.id = #{id}
    </select>

    <select id="selectApiList" parameterType="java.lang.String" resultType="com.lakinm.op.model.dto.ApiDTO">
        SELECT a.id, a.num, a.`name`, a.`level`, a.module_id, b.`name` as moduleName, a.project_id, a.path, a.`status`,
        a.update_time, c.username as username
        FROM `api` a
        LEFT JOIN `api_module` b on a.module_id = b.id
        LEFT JOIN `user` c on a.update_user = c.id
        WHERE a.`status` != 'del'
        <if test="projectId != null and projectId != ''">
            and a.project_id = #{projectId}
        </if>
        <if test="moduleId != null and moduleId != ''">
            and a.module_id = #{moduleId}
        </if>
        <if test="condition != null and condition != ''">
            and ((a.name like #{condition}) or (a.path like #{condition}))
        </if>
        ORDER BY a.update_time desc, a.`name`

    </select>
</mapper>