<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lakinm.op.model.mapper.CaseApiMapper" >
  <resultMap id="BaseResultMap" type="com.lakinm.op.model.entity.CaseApi" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="index" property="index" jdbcType="INTEGER" />
    <result column="case_id" property="caseId" jdbcType="VARCHAR" />
    <result column="api_id" property="apiId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lakinm.op.model.entity.CaseApiWithBLOBs" extends="BaseResultMap" >
    <result column="header" property="header" jdbcType="LONGVARCHAR" />
    <result column="body" property="body" jdbcType="LONGVARCHAR" />
    <result column="query" property="query" jdbcType="LONGVARCHAR" />
    <result column="rest" property="rest" jdbcType="LONGVARCHAR" />
    <result column="assertion" property="assertion" jdbcType="LONGVARCHAR" />
    <result column="relation" property="relation" jdbcType="LONGVARCHAR" />
    <result column="controller" property="controller" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, index, case_id, api_id
  </sql>
  <sql id="Blob_Column_List" >
    header, body, query, rest, assertion, relation, controller
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from case_api
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from case_api
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lakinm.op.model.entity.CaseApiWithBLOBs" >
    insert into case_api (id, index, case_id, 
      api_id, header, body, 
      query, rest, assertion, 
      relation, controller)
    values (#{id,jdbcType=VARCHAR}, #{index,jdbcType=INTEGER}, #{caseId,jdbcType=VARCHAR}, 
      #{apiId,jdbcType=VARCHAR}, #{header,jdbcType=LONGVARCHAR}, #{body,jdbcType=LONGVARCHAR}, 
      #{query,jdbcType=LONGVARCHAR}, #{rest,jdbcType=LONGVARCHAR}, #{assertion,jdbcType=LONGVARCHAR}, 
      #{relation,jdbcType=LONGVARCHAR}, #{controller,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lakinm.op.model.entity.CaseApiWithBLOBs" >
    insert into case_api
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="index != null" >
        index,
      </if>
      <if test="caseId != null" >
        case_id,
      </if>
      <if test="apiId != null" >
        api_id,
      </if>
      <if test="header != null" >
        header,
      </if>
      <if test="body != null" >
        body,
      </if>
      <if test="query != null" >
        query,
      </if>
      <if test="rest != null" >
        rest,
      </if>
      <if test="assertion != null" >
        assertion,
      </if>
      <if test="relation != null" >
        relation,
      </if>
      <if test="controller != null" >
        controller,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="index != null" >
        #{index,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null" >
        #{apiId,jdbcType=VARCHAR},
      </if>
      <if test="header != null" >
        #{header,jdbcType=LONGVARCHAR},
      </if>
      <if test="body != null" >
        #{body,jdbcType=LONGVARCHAR},
      </if>
      <if test="query != null" >
        #{query,jdbcType=LONGVARCHAR},
      </if>
      <if test="rest != null" >
        #{rest,jdbcType=LONGVARCHAR},
      </if>
      <if test="assertion != null" >
        #{assertion,jdbcType=LONGVARCHAR},
      </if>
      <if test="relation != null" >
        #{relation,jdbcType=LONGVARCHAR},
      </if>
      <if test="controller != null" >
        #{controller,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lakinm.op.model.entity.CaseApiWithBLOBs" >
    update case_api
    <set >
      <if test="index != null" >
        index = #{index,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        case_id = #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null" >
        api_id = #{apiId,jdbcType=VARCHAR},
      </if>
      <if test="header != null" >
        header = #{header,jdbcType=LONGVARCHAR},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=LONGVARCHAR},
      </if>
      <if test="query != null" >
        query = #{query,jdbcType=LONGVARCHAR},
      </if>
      <if test="rest != null" >
        rest = #{rest,jdbcType=LONGVARCHAR},
      </if>
      <if test="assertion != null" >
        assertion = #{assertion,jdbcType=LONGVARCHAR},
      </if>
      <if test="relation != null" >
        relation = #{relation,jdbcType=LONGVARCHAR},
      </if>
      <if test="controller != null" >
        controller = #{controller,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lakinm.op.model.entity.CaseApiWithBLOBs" >
    update case_api
    set index = #{index,jdbcType=INTEGER},
      case_id = #{caseId,jdbcType=VARCHAR},
      api_id = #{apiId,jdbcType=VARCHAR},
      header = #{header,jdbcType=LONGVARCHAR},
      body = #{body,jdbcType=LONGVARCHAR},
      query = #{query,jdbcType=LONGVARCHAR},
      rest = #{rest,jdbcType=LONGVARCHAR},
      assertion = #{assertion,jdbcType=LONGVARCHAR},
      relation = #{relation,jdbcType=LONGVARCHAR},
      controller = #{controller,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lakinm.op.model.entity.CaseApi" >
    update case_api
    set index = #{index,jdbcType=INTEGER},
      case_id = #{caseId,jdbcType=VARCHAR},
      api_id = #{apiId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>