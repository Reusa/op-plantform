<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lakinm.op.model.mapper.ReportCollectionCaseApiMapper" >
  <resultMap id="BaseResultMap" type="com.lakinm.op.model.entity.ReportCollectionCaseApi" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="report_collection_case_id" property="reportCollectionCaseId" jdbcType="VARCHAR" />
    <result column="case_api_index" property="caseApiIndex" jdbcType="INTEGER" />
    <result column="api_id" property="apiId" jdbcType="VARCHAR" />
    <result column="api_name" property="apiName" jdbcType="VARCHAR" />
    <result column="api_path" property="apiPath" jdbcType="VARCHAR" />
    <result column="during" property="during" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lakinm.op.model.entity.ReportCollectionCaseApi" extends="BaseResultMap" >
    <result column="exec_log" property="execLog" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, report_collection_case_id, case_api_index, api_id, api_name, api_path, during, 
    status
  </sql>
  <sql id="Blob_Column_List" >
    exec_log
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from report_collection_case_api
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from report_collection_case_api
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lakinm.op.model.entity.ReportCollectionCaseApi" >
    insert into report_collection_case_api (id, report_collection_case_id, case_api_index, 
      api_id, api_name, api_path, 
      during, status, exec_log
      )
    values (#{id,jdbcType=VARCHAR}, #{reportCollectionCaseId,jdbcType=VARCHAR}, #{caseApiIndex,jdbcType=INTEGER}, 
      #{apiId,jdbcType=VARCHAR}, #{apiName,jdbcType=VARCHAR}, #{apiPath,jdbcType=VARCHAR}, 
      #{during,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{execLog,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lakinm.op.model.entity.ReportCollectionCaseApi" >
    insert into report_collection_case_api
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="reportCollectionCaseId != null" >
        report_collection_case_id,
      </if>
      <if test="caseApiIndex != null" >
        case_api_index,
      </if>
      <if test="apiId != null" >
        api_id,
      </if>
      <if test="apiName != null" >
        api_name,
      </if>
      <if test="apiPath != null" >
        api_path,
      </if>
      <if test="during != null" >
        during,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="execLog != null" >
        exec_log,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="reportCollectionCaseId != null" >
        #{reportCollectionCaseId,jdbcType=VARCHAR},
      </if>
      <if test="caseApiIndex != null" >
        #{caseApiIndex,jdbcType=INTEGER},
      </if>
      <if test="apiId != null" >
        #{apiId,jdbcType=VARCHAR},
      </if>
      <if test="apiName != null" >
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiPath != null" >
        #{apiPath,jdbcType=VARCHAR},
      </if>
      <if test="during != null" >
        #{during,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="execLog != null" >
        #{execLog,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lakinm.op.model.entity.ReportCollectionCaseApi" >
    update report_collection_case_api
    <set >
      <if test="reportCollectionCaseId != null" >
        report_collection_case_id = #{reportCollectionCaseId,jdbcType=VARCHAR},
      </if>
      <if test="caseApiIndex != null" >
        case_api_index = #{caseApiIndex,jdbcType=INTEGER},
      </if>
      <if test="apiId != null" >
        api_id = #{apiId,jdbcType=VARCHAR},
      </if>
      <if test="apiName != null" >
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiPath != null" >
        api_path = #{apiPath,jdbcType=VARCHAR},
      </if>
      <if test="during != null" >
        during = #{during,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="execLog != null" >
        exec_log = #{execLog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lakinm.op.model.entity.ReportCollectionCaseApi" >
    update report_collection_case_api
    set report_collection_case_id = #{reportCollectionCaseId,jdbcType=VARCHAR},
      case_api_index = #{caseApiIndex,jdbcType=INTEGER},
      api_id = #{apiId,jdbcType=VARCHAR},
      api_name = #{apiName,jdbcType=VARCHAR},
      api_path = #{apiPath,jdbcType=VARCHAR},
      during = #{during,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      exec_log = #{execLog,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lakinm.op.model.entity.ReportCollectionCaseApi" >
    update report_collection_case_api
    set report_collection_case_id = #{reportCollectionCaseId,jdbcType=VARCHAR},
      case_api_index = #{caseApiIndex,jdbcType=INTEGER},
      api_id = #{apiId,jdbcType=VARCHAR},
      api_name = #{apiName,jdbcType=VARCHAR},
      api_path = #{apiPath,jdbcType=VARCHAR},
      during = #{during,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>